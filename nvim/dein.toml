[[plugins]]
repo = 'Shougo/dein.vim'

# Appearance

[[plugins]]
repo = 'yantene/molokai'
hook_add = 'au cs_hook VimEnter * nested colorscheme molokai'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = {
  \ 'colorscheme': 'wombat',
  \ 'active': {
  \   'left': [ [ 'mode', 'paste' ],
  \             [ 'fugitive', 'readonly', 'relativepath', 'modified' ] ],
  \   'right': [ [ 'lineinfo' ],
  \              [ 'percent' ],
  \              [ 'fileformat', 'fileencoding', 'filetype', 'charvaluehex' ],
  \              [ 'linter_checking', 'linter_errors', 'linter_warnings', 'linter_ok' ] ],
  \ },
  \ 'component_function': {
  \    'relativepath': 'RelativePath'
  \ },
  \}
'''

# Controll

[[plugins]]
repo = 'Lokaltog/vim-easymotion'
hook_add = '''
  let g:EasyMotion_do_mapping = 0
  let g:EasyMotion_smartcase = 1
  nmap f <plug>(easymotion-overwin-f2)
'''

[[plugins]]
repo = 'tmhedberg/matchit'

# Completion

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#enable_camel_case = 0
  let g:deoplete#enable_ignore_case = 0

  call deoplete#custom#option({
  \ 'auto_complete_delay': 0,
  \ 'auto_complete_start_length': 1,
  \ 'refresh_always': v:false,
  \ 'smart_case': v:true,
  \ 'max_list': 10000,
  \ })

  call deoplete#custom#var('file', 'enable_buffer_path', v:true)

  inoremap <expr><tab> pumvisible() ? "\<C-n>" : "\<tab>"
'''
# Note: Execute the :UpdateRemotePlugins and restart Neovim.

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
rev  = 'next'
build = 'bash install.sh'
hook_add = '''
  set hidden
  let g:LanguageClient_serverCommands = {
  \ 'rust': ['rustup', 'run', 'stable', 'rls'],
  \ 'ruby': ['solargraph', 'stdio'],
  \ 'vue': ['vls'],
  \ 'javascript': ['javascript-typescript-stdio'],
  \ 'typescript': ['javascript-typescript-stdio'],
  \}
  let g:LanguageClient_autoStart = 1
  nnoremap <F5>          :call LanguageClient_contextMenu()<CR>
  nnoremap <silent> K    :call LanguageClient#textDocument_hover()<CR>
  nnoremap <silent> gd   :call LanguageClient#textDocument_definition()<CR>
  nnoremap <silent> <F2> :call LanguageClient#textDocument_rename()<CR>
'''

# Lint

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  let b:ale_linters = {
  \  'javascript': ['eslint'],
  \}
'''

[[plugins]]
repo = 'maximbaz/lightline-ale'
depends = ['lightline.vim', 'ale']
hook_add = '''
  let g:lightline.component_expand = {
    \'linter_checking': 'lightline#ale#checking',
    \'linter_warnings': 'lightline#ale#warnings',
    \'linter_errors': 'lightline#ale#errors',
    \'linter_ok': 'lightline#ale#ok',
  \ }
  let g:lightline.component_type = {
    \'linter_checking': 'left',
    \'linter_warnings': 'warning',
    \'linter_errors': 'error',
    \'linter_ok': 'left',
  \}
'''

# Tools

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
